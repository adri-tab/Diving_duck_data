library(tidyverse)
library(rpostgis)
library(sf)
library(lwgeom)
library(mapview)

methods(class = "sf")

# lire un script sql
getSQL <- dget('./Code/functions_own.r') %>% pluck('getSQL')

# transfo en UTF-8
utf8_transfo <- dget('./Code/functions_own.r') %>% pluck('utf8_transfo')

# connexionà la base oncfs pour récupérer les bonnes listes
con <- dbConnect(PostgreSQL(), 
                 dbname = "portail_oncfs",
                 host = "192.168.4.9", 
                 port = 5438,
                 user = "adm.lievre", 
                 password = "M@sterL!3vr3")
dbListTables(con)

# connexion à la base locale
con2 <- dbConnect(PostgreSQL(), 
                  dbname = "petite_faune_sedentaire",
                  host = "localhost", 
                  port = 5432,
                  user = "postgres",
                  password = rstudioapi::askForPassword("Mot de passe PFS ?"))

# récup des bonnes références IGN
i <- Sys.time()
dep <- st_read(dsn = con, 
               query = 'SELECT * FROM ref_administratif.ign_adminexpress_departement_fr', 
               geometry_column = 'geom') %>% 
  utf8_transfo()
Sys.time() - i

dep2 <- dep %>% 
  st_zm %>% # drop the M dimension to keep only XY instead of XYM
  st_set_geometry(NULL) %>% 
  as_tibble

plot(dep['nom_dep'] %>% st_zm)
head(st_coordinates(dep))
head(st_coordinates(dep %>% st_zm))

#  on crée le schéma administratif ----------------------------------------
pgPostGIS(con2)
dbGetQuery(con2, getSQL('./Code/SQL_ref_administratif.sql'))

# on définit quel schema est prioritaire
# dbGetQuery(con2, 'SHOW search_path;
#             SET search_path to ref_administratif;
#             SHOW search_path')

# on remplit la table
st_write(obj = dep,
         dsn = con2,
         layer = c("ref_administratif","ign_adminexpress_departement_fr"),
         append = T,
         overwrite = F)

st_read(dsn = con2,
        layer = c("ref_administratif","ign_adminexpress_departement_fr"),
        geometry_column = 'geom')

rm(list = c("dep", "dep2"))

# commune
i <- Sys.time()
com <- st_read(dsn = con, 
               query = 'SELECT * FROM ref_administratif.ign_adminexpress_commune_fr', 
               geometry_column = 'geom') %>% 
  utf8_transfo()
Sys.time() - i

com2 <- com %>% 
  st_set_geometry(NULL) %>% 
  as_tibble
rm(list = "com2")

# mapview(com['nom_com'])
# head(st_coordinates(com))

st_write(obj = com,
         dsn = con2,
         layer = c("ref_administratif","ign_adminexpress_commune_fr"),
         append = T,
         overwrite = F)

st_read(dsn = con2,
        layer = c("ref_administratif","ign_adminexpress_commune_fr"),
        geometry_column = 'geom') %>% 
  utf8_transfo

dbDisconnect(con)
dbDisconnect(con2)
